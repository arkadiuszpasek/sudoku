{"version":3,"sources":["logic/sudoku/utils.ts","logic/sudoku/useSudoku.tsx","components/buttons/Button/Button.tsx","components/board/actions/Actions.tsx","components/pickers/DigitPicker/DigitPicker.tsx","components/board/SudokuDigit/SudokuDigit.tsx","components/board/SudokuSquare/SudokuSquare.tsx","components/board/Sudoku/Sudoku.tsx","App.tsx","index.tsx"],"names":["shiftRowBySquare","row","f","s","t","rest","shiftRowByColumn","generateSudokuBoard","rows","chunk","map","tripleRows","fRowChunked","sRowChunked","tRowChunked","range","i","reshapeRowsToBoard","firstRow","shuffle","secondRow","thirdRow","fourthRow","fifthRow","sixthRow","seventhRow","eighthRow","ninthRow","generateRows","SudokuContext","React","createContext","undefined","SudokuProvider","children","sudoku","useState","board","setBoard","updateSquare","squareRow","squareCol","digitRow","digitCol","value","squaresR","squareRowIdx","squareC","squareIdx","digitR","digitRowIdx","digit","reset","useSudokuBoard","Provider","useSudoku","useContext","Error","Button","variant","className","classNames","Actions","onClick","DigitPicker","onPicked","renderDigit","SudokuDigit","position","onDigitPicked","isPicking","setIsPicking","handlePicked","type","onBlur","onFocus","Grow","in","timeout","SudokuSquare","digits","rowIdx","colIdx","v","Sudoku","renderSquare","rIdx","cIdx","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca71b74f.chunk.js","sourcesContent":["import { chunk, range, shuffle } from \"lodash\";\nimport { SudokuBoard } from \"./types\";\n\nconst shiftRowBySquare = (row: number[]): number[] => {\n  const [f, s, t, ...rest] = row;\n  return [...rest, f, s, t];\n};\nconst shiftRowByColumn = (row: number[]): number[] => {\n  const [f, ...rest] = row;\n  return [...rest, f];\n};\nexport const generateRows = (): number[][] => {\n  const firstRow = shuffle(range(1, 10));\n  const secondRow = shiftRowBySquare(firstRow);\n  const thirdRow = shiftRowBySquare(secondRow);\n\n  const fourthRow = shiftRowByColumn(thirdRow);\n  const fifthRow = shiftRowBySquare(fourthRow);\n  const sixthRow = shiftRowBySquare(fifthRow);\n\n  const seventhRow = shiftRowByColumn(sixthRow);\n  const eighthRow = shiftRowBySquare(seventhRow);\n  const ninthRow = shiftRowBySquare(eighthRow);\n\n  return shuffle([\n    firstRow,\n    secondRow,\n    thirdRow,\n    fourthRow,\n    fifthRow,\n    sixthRow,\n    seventhRow,\n    eighthRow,\n    ninthRow,\n  ]);\n};\n\nexport const reshapeRowsToBoard = (rows: number[][]): SudokuBoard => {\n  return chunk(rows, 3).map((tripleRows) => {\n    const [fRowChunked, sRowChunked, tRowChunked] = tripleRows.map((row) => {\n      return chunk(row, 3);\n    });\n\n    return range(0, 3).map((i) => {\n      return [fRowChunked[i], sRowChunked[i], tRowChunked[i]];\n    });\n  });\n};\n\nexport const generateSudokuBoard = (): SudokuBoard => {\n  const rows = generateRows();\n\n  return reshapeRowsToBoard(rows);\n};\n","import React, { useState } from \"react\";\nimport { SudokuBoard } from \"./types\";\nimport { generateSudokuBoard } from \"./utils\";\n\ninterface SudokuHook {\n  board: SudokuBoard;\n  updateSquare(\n    squareRow: number,\n    squareCol: number,\n    digitRow: number,\n    digitCol: number,\n    value: number | null\n  ): void;\n  reset(): void;\n}\n\nconst useSudokuBoard = (): SudokuHook => {\n  const [board, setBoard] = useState<SudokuBoard>(generateSudokuBoard());\n\n  const updateSquare = (\n    squareRow: number,\n    squareCol: number,\n    digitRow: number,\n    digitCol: number,\n    value: number | null\n  ) => {\n    setBoard(\n      board.map((squaresR, squareRowIdx) => {\n        if (squareRowIdx !== squareRow) {\n          return squaresR;\n        }\n\n        return squaresR.map((squareC, squareIdx) => {\n          if (squareCol !== squareIdx) {\n            return squareC;\n          }\n\n          return squareC.map((digitR, digitRowIdx) => {\n            if (digitRowIdx !== digitRow) {\n              return digitR;\n            }\n\n            return digitR.map((digit, i) => {\n              if (i !== digitCol) {\n                return digit;\n              }\n\n              return value;\n            });\n          });\n        });\n      })\n    );\n  };\n\n  const reset = () => {\n    setBoard(generateSudokuBoard());\n  };\n\n  return {\n    board,\n    updateSquare,\n    reset,\n  };\n};\n\nconst SudokuContext = React.createContext<SudokuHook | undefined>(undefined);\nexport const SudokuProvider = ({\n  children,\n}: React.PropsWithChildren<unknown>) => {\n  const sudoku = useSudokuBoard();\n\n  return (\n    <SudokuContext.Provider value={sudoku}>{children}</SudokuContext.Provider>\n  );\n};\n\nexport const useSudoku = (): SudokuHook => {\n  const sudoku = React.useContext(SudokuContext);\n\n  if (!sudoku) {\n    throw new Error(\"useSudoku must be used within SudokuProvider\");\n  }\n\n  return sudoku;\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport \"./Button.scss\";\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  variant: Variant;\n}\nexport const Button = ({ variant, children, ...rest }: Props) => {\n  return (\n    <div className={classNames(\"button\", variant)} {...rest}>\n      {children}\n    </div>\n  );\n};\n\ntype Variant = \"button-normal\" | \"button-outlined\";\n","import React from \"react\";\nimport { useSudoku } from \"../../../logic/sudoku/useSudoku\";\nimport { Button } from \"../../buttons/Button/Button\";\nimport \"./Actions.scss\";\n\nexport const Actions = () => {\n  const { reset } = useSudoku();\n  return (\n    <div className=\"actions\">\n      <Button variant=\"button-normal\" onClick={reset}>\n        New game\n      </Button>\n      <Button variant=\"button-outlined\">Check solution</Button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./DigitPicker.scss\";\n\ninterface Props {\n  onPicked(digit: number): void;\n}\nexport const DigitPicker = ({ onPicked }: Props) => {\n  const renderDigit = (digit: number) => {\n    const handlePicked = () => {\n      onPicked(digit);\n    };\n    return (\n      <div className=\"digit-picker-btn\" onClick={handlePicked}>\n        {digit}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"digit-picker\">\n      <div className=\"digit-picker-row\">\n        {renderDigit(1)}\n        {renderDigit(2)}\n        {renderDigit(3)}\n      </div>\n      <div className=\"digit-picker-row\">\n        {renderDigit(4)}\n        {renderDigit(5)}\n        {renderDigit(6)}\n      </div>\n      <div className=\"digit-picker-row\">\n        {renderDigit(7)}\n        {renderDigit(8)}\n        {renderDigit(9)}\n      </div>\n    </div>\n  );\n};\n","import { Grow } from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { SudokuBoardValue } from \"../../../logic/sudoku/types\";\nimport { DigitPicker } from \"../../pickers/DigitPicker/DigitPicker\";\nimport \"./SudokuDigit.scss\";\n\ninterface Props {\n  digit: SudokuBoardValue;\n  position: Style;\n  onDigitPicked(value: SudokuBoardValue): void;\n}\n\nexport const SudokuDigit = ({ digit, position, onDigitPicked }: Props) => {\n  const [isPicking, setIsPicking] = useState<boolean>();\n  const handlePicked = (value: number | null) => {\n    setIsPicking(undefined);\n    onDigitPicked(value);\n  };\n  const renderPicker = () => {\n    return (\n      <Grow in timeout={250}>\n        <div className=\"sudoku-digit-picker\">\n          <DigitPicker onPicked={handlePicked} />\n        </div>\n      </Grow>\n    );\n  };\n\n  const renderDigit = () => {\n    return <p>{digit}</p>;\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onBlur={() => setIsPicking(false)}\n      onFocus={() => setIsPicking(true)}\n      onClick={isPicking === undefined ? () => setIsPicking(true) : undefined}\n      className={classNames(\"sudoku-digit\", position)}\n    >\n      {isPicking && renderPicker()}\n      {renderDigit()}\n    </button>\n  );\n};\n\ntype Style =\n  | \"top-left\"\n  | \"top-middle\"\n  | \"top-right\"\n  | \"center-left\"\n  | \"center-middle\"\n  | \"center-right\"\n  | \"bottom-left\"\n  | \"bottom-middle\"\n  | \"bottom-right\";\n","import React from \"react\";\nimport {\n  SudokuBoardSquare,\n  SudokuBoardValue,\n} from \"../../../logic/sudoku/types\";\nimport { SudokuDigit } from \"../SudokuDigit/SudokuDigit\";\nimport \"./SudokuSquare.scss\";\n\ninterface Props {\n  digits: SudokuBoardSquare;\n  onDigitPicked(rowIdx: number, colIdx: number, value: SudokuBoardValue): void;\n}\n\nexport const SudokuSquare = ({ digits, onDigitPicked }: Props) => {\n  const renderDigit = (\n    rowIdx: number,\n    colIdx: number,\n    position: React.ComponentProps<typeof SudokuDigit>[\"position\"]\n  ) => {\n    return (\n      <SudokuDigit\n        digit={digits[rowIdx][colIdx]}\n        position={position}\n        onDigitPicked={(v) => onDigitPicked(rowIdx, colIdx, v)}\n      />\n    );\n  };\n  return (\n    <div className=\"sudoku-square\">\n      <div className=\"sudoku-square-row\">\n        {renderDigit(0, 0, \"top-left\")}\n        {renderDigit(0, 1, \"top-middle\")}\n        {renderDigit(0, 2, \"top-right\")}\n      </div>\n      <div className=\"sudoku-square-row\">\n        {renderDigit(1, 0, \"center-left\")}\n        {renderDigit(1, 1, \"center-middle\")}\n        {renderDigit(1, 2, \"center-right\")}\n      </div>\n      <div className=\"sudoku-square-row\">\n        {renderDigit(2, 0, \"bottom-left\")}\n        {renderDigit(2, 1, \"bottom-middle\")}\n        {renderDigit(2, 2, \"bottom-right\")}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSudoku } from \"../../../logic/sudoku/useSudoku\";\nimport { SudokuSquare } from \"../SudokuSquare/SudokuSquare\";\nimport \"./Sudoku.scss\";\n\nexport const Sudoku = () => {\n  const { board, updateSquare } = useSudoku();\n\n  const renderSquare = (rowIdx: number, colIdx: number) => {\n    return (\n      <SudokuSquare\n        digits={board[rowIdx][colIdx]}\n        onDigitPicked={(rIdx, cIdx, value) =>\n          updateSquare(rowIdx, colIdx, rIdx, cIdx, value)\n        }\n      />\n    );\n  };\n  return (\n    <div className=\"sudoku\">\n      <div className=\"sudoku-row\">\n        {renderSquare(0, 0)}\n        {renderSquare(0, 1)}\n        {renderSquare(0, 2)}\n      </div>\n      <div className=\"sudoku-row\">\n        {renderSquare(1, 0)}\n        {renderSquare(1, 1)}\n        {renderSquare(1, 2)}\n      </div>\n      <div className=\"sudoku-row\">\n        {renderSquare(2, 0)}\n        {renderSquare(2, 1)}\n        {renderSquare(2, 2)}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Actions } from \"./components/board/actions/Actions\";\nimport { Sudoku } from \"./components/board/Sudoku/Sudoku\";\nimport { SudokuProvider } from \"./logic/sudoku/useSudoku\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <SudokuProvider>\n        <Sudoku />\n        <Actions />\n      </SudokuProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}